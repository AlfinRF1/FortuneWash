/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package transaksijual;

import barang.barang;
import halamanutama.halamanutama;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
import login.LOGIN1;
import transaksibeli.transaksibeli;
import transaksijual.eksekusitransaksijual;
/**
 *
 * @author alvon
 */
public class transaksijual extends javax.swing.JFrame {
  

    
    /**
     * Creates new form transaksijual
     */
    public transaksijual() {
        initComponents();
        loadData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        idbrng1 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        idbrng2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        SEARCH = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btncontinue = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/blok biru.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 20, 380, 90));

        jTable1.setBackground(new java.awt.Color(51, 153, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Plat_Nomor", "Jenis_Kendaraan", "Warna_Kendaraan", "Tipe_Kendaraan", "Id_Barang", "Id_barang_2"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 170, 690, 460));

        idbrng1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idbrng1ActionPerformed(evt);
            }
        });
        getContentPane().add(idbrng1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 300, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 300, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 300, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, 300, -1));

        idbrng2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idbrng2ActionPerformed(evt);
            }
        });
        getContentPane().add(idbrng2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 470, 300, -1));
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 300, -1));

        SEARCH.setBackground(new java.awt.Color (0, 0, 0, 0));
        SEARCH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SEARCH.setForeground(new java.awt.Color(255, 255, 255));
        SEARCH.setBorder(null);
        SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCH, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 40, 270, 40));

        jLabel11.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Barang");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel12.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Transaksi Jual");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, -1));

        jLabel13.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Transaksi Beli");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 600, -1, -1));

        jLabel14.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Beranda");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fc trxj owner.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 110, 70));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 110, 100));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 110, 80));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 110, 80));

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 20, 110, 80));

        btncontinue.setBackground(new java.awt.Color(51, 204, 255));
        btncontinue.setText("continue");
        btncontinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncontinueActionPerformed(evt);
            }
        });
        getContentPane().add(btncontinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, 190, 60));

        btndelete.setBackground(new java.awt.Color(51, 204, 255));
        btndelete.setText("delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 670, 200, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
   private void loadData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 
        
        try (Connection conn = koneksi.koneksiDB();
             PreparedStatement stmt = conn.prepareStatement(
                 "SELECT Plat_Nomor, Jenis_Kendaraan, Warna_Kendaraan, " +
                 "Tipe_Kendaraan, Id_Barang, Id_barang_2 FROM kendaraan")) {
            
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("Plat_Nomor"),
                    rs.getString("Jenis_Kendaraan"),
                    rs.getString("Warna_Kendaraan"),
                    rs.getString("Tipe_Kendaraan"),
                    rs.getString("Id_Barang"),
                    rs.getString("Id_barang_2")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
                "Error loading data: " + e.getMessage(), 
                "Database Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    halamanutama hal = new halamanutama();
        hal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       barang b  = new barang();
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
transaksijual j  = new transaksijual();
        j.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        transaksibeli b  = new transaksibeli();
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         int pilihan = JOptionPane.showConfirmDialog(this, 
            "Apakah anda yakin ingin logout?",
            "Konfirmasi Logout",
            JOptionPane.YES_NO_OPTION);
            
    if (pilihan == JOptionPane.YES_OPTION) {
        // Tutup frame saat ini
        this.dispose();
 
        LOGIN1 L = new LOGIN1();
        L.setVisible(true);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int row = jTable1.getSelectedRow();
    if (row >= 0) {
        try {
            jTextField5.setText(jTable1.getValueAt(row, 0).toString()); // Plat_Nomor
            jTextField1.setText(jTable1.getValueAt(row, 1).toString()); // Jenis_Kendaraan
            jTextField2.setText(jTable1.getValueAt(row, 2).toString()); // Warna_Kendaraan
            jTextField3.setText(jTable1.getValueAt(row, 3).toString()); // Tipe_Kendaraan
            idbrng1.setText(jTable1.getValueAt(row, 4).toString());    // Id_Barang
            idbrng2.setText(jTable1.getValueAt(row, 5).toString());    // Id_barang_2
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error selecting data: " + e.getMessage(),
                "Selection Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }
    
    }//GEN-LAST:event_jTable1MouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int row = jTable1.getSelectedRow();
    if (row < 0) {
        JOptionPane.showMessageDialog(this, "Silahkan pilih data yang akan dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }
    String platNomor = jTable1.getValueAt(row, 0).toString();
    int confirm = JOptionPane.showConfirmDialog(this,
        "Apakah anda yakin ingin menghapus data kendaraan dengan plat nomor " + platNomor + "?",
        "Konfirmasi Hapus",
        JOptionPane.YES_NO_OPTION);  
    if (confirm == JOptionPane.YES_OPTION) {
        try (Connection conn = koneksi.koneksiDB();
             PreparedStatement stmt = conn.prepareStatement( "DELETE FROM kendaraan WHERE Plat_Nomor = ?")) {
            stmt.setString(1, platNomor);
            int result = stmt.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, 
                    "Data berhasil dihapus!", 
                    "Sukses", 
                    JOptionPane.INFORMATION_MESSAGE);
                loadData(); 
                clearFields(); 
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Gagal menghapus data", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Error menghapus data: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btncontinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncontinueActionPerformed
     try {
            String platNomor = jTextField5.getText().trim();
            String jenisKendaraan = jTextField1.getText().trim();
            String warnaKendaraan = jTextField2.getText().trim();
            String tipeKendaraan = jTextField3.getText().trim();
            String idBarang1 = idbrng1.getText().trim();
            String idBarang2 = idbrng2.getText().trim();
            
            if (!validateBarangId(idBarang1) || !validateBarangId(idBarang2)) {
                JOptionPane.showMessageDialog(this, 
                    "One or both ID Barang not found in database!", 
                    "Validation Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (platNomor.isEmpty() || jenisKendaraan.isEmpty() || 
                warnaKendaraan.isEmpty() || tipeKendaraan.isEmpty() || 
                idBarang1.isEmpty() || idBarang2.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "All fields must be filled!", 
                    "Validation Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            try (Connection conn = koneksi.koneksiDB();
                 PreparedStatement stmt = conn.prepareStatement(
                     "INSERT INTO kendaraan (Plat_Nomor, Jenis_Kendaraan, " +
                     "Warna_Kendaraan, Tipe_Kendaraan, Id_Barang, Id_barang_2) " +
                     "VALUES (?, ?, ?, ?, ?, ?)")) {
                stmt.setString(1, platNomor);
                stmt.setString(2, jenisKendaraan);
                stmt.setString(3, warnaKendaraan);
                stmt.setString(4, tipeKendaraan);
                stmt.setString(5, idBarang1);
                stmt.setString(6, idBarang2); 
                int result = stmt.executeUpdate();  
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, 
                        "data successfully!", 
                        "Success", 
                        JOptionPane.INFORMATION_MESSAGE);                       
                    loadData();
                    clearFields();
                     eksekusitransaksijual e = new eksekusitransaksijual();
                     e.setVisible(true);
                     this.dispose();
                }
            }
        } catch (SQLException e) {
            if (e.getMessage().contains("Duplicate entry")) {
                JOptionPane.showMessageDialog(this, 
                    "Plate Number already registered!", 
                    "Database Error", 
                    JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Error saving data: " + e.getMessage(), 
                    "Database Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    private boolean validateBarangId(String idBarang) {
        try (Connection conn = koneksi.koneksiDB();
             PreparedStatement stmt = conn.prepareStatement(
                 "SELECT COUNT(*) FROM barang WHERE Id_Barang = ?")) {
            stmt.setString(1, idBarang);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
                "Error validating ID Barang: " + e.getMessage(), 
                "Database Error", 
                JOptionPane.ERROR_MESSAGE);
        }
        return false; 
    }        
    private void clearFields() {
    jTextField1.setText("");  
    jTextField2.setText("");  
    jTextField3.setText("");  
    idbrng1.setText("");     
    idbrng2.setText("");      
    jTextField5.setText(""); 
    }//GEN-LAST:event_btncontinueActionPerformed

    private void idbrng2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idbrng2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idbrng2ActionPerformed

    private void idbrng1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idbrng1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idbrng1ActionPerformed

    private void SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHActionPerformed
      String searchKeyword = SEARCH.getText().trim();
if (!searchKeyword.isEmpty()) {
    try (Connection conn = koneksi.koneksiDB()) {
        String sql = "SELECT * FROM kendaraan " +
                     "WHERE Id_Barang LIKE ? OR " +
                           "Jenis_Kendaraan LIKE ? OR " +
                           "Warna_Kendaraan LIKE ? OR " +
                           "Tipe_Kendaraan LIKE ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, "%" + searchKeyword + "%");
        stmt.setString(2, "%" + searchKeyword + "%");
        stmt.setString(3, "%" + searchKeyword + "%");
        stmt.setString(4, "%" + searchKeyword + "%");
        ResultSet rs = stmt.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        while (rs.next()) {
            String idBarang = rs.getString("Id_Barang");
            String jenisKendaraan = rs.getString("Jenis_Kendaraan");
            String warnaKendaraan = rs.getString("Warna_Kendaraan");
            String tipeKendaraan = rs.getString("Tipe_Kendaraan");
            model.addRow(new Object[]{idBarang, jenisKendaraan, warnaKendaraan, tipeKendaraan});
        }
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Pencarian Kosong", JOptionPane.INFORMATION_MESSAGE);
        }
        rs.close();
        stmt.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error during search: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Masukkan keyword untuk pencarian!", "Peringatan", JOptionPane.WARNING_MESSAGE);
}

    }//GEN-LAST:event_SEARCHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksijual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksijual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksijual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksijual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksijual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SEARCH;
    private javax.swing.JButton btncontinue;
    private javax.swing.JButton btndelete;
    private javax.swing.JTextField idbrng1;
    private javax.swing.JTextField idbrng2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
