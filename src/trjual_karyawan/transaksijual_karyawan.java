/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trjual_karyawan;

import Barang_karyawan.barang_karyawan;
import halamanutama1.halamanutama1;
import login.LOGIN1;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/**
 *
 * @author alvon
 */
public class transaksijual_karyawan extends javax.swing.JFrame {



    public transaksijual_karyawan() {
        initComponents();
         loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        scrtjk = new javax.swing.JScrollPane();
        tabeltrjk = new javax.swing.JTable();
        platnomor = new javax.swing.JTextField();
        jenis = new javax.swing.JTextField();
        warna = new javax.swing.JTextField();
        tipe = new javax.swing.JTextField();
        idbrng = new javax.swing.JTextField();
        idbrng2 = new javax.swing.JTextField();
        SEARCH = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btncontinue = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, 410, 100));

        jLabel6.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel6.setText("Barang");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        jLabel7.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel7.setText("Beranda");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        jLabel8.setFont(new java.awt.Font("STKaiti", 1, 14)); // NOI18N
        jLabel8.setText("Transaksi Jual");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, -1));

        tabeltrjk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Plat_Nomor", "Jenis_Kendaraan", "Warna_Kendaraan", "Tipe_Kendaraan", "Id_Barang", "Id_barang_2"
            }
        ));
        tabeltrjk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabeltrjkMouseClicked(evt);
            }
        });
        scrtjk.setViewportView(tabeltrjk);

        getContentPane().add(scrtjk, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 170, 690, 460));
        getContentPane().add(platnomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 300, -1));
        getContentPane().add(jenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 300, -1));
        getContentPane().add(warna, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, 300, -1));
        getContentPane().add(tipe, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, 300, -1));
        getContentPane().add(idbrng, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 300, -1));

        idbrng2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idbrng2ActionPerformed(evt);
            }
        });
        getContentPane().add(idbrng2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 300, -1));

        SEARCH.setBackground(new java.awt.Color (0, 0, 0, 0));
        SEARCH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SEARCH.setForeground(new java.awt.Color(255, 255, 255));
        SEARCH.setBorder(null);
        SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCH, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 40, 270, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fc noeks trxj kary.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1600, -1));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 110, 70));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 110, 100));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 110, 80));

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 10, 110, 100));

        btndelete.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btndelete.setText("delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 670, 200, 50));

        btncontinue.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 14)); // NOI18N
        btncontinue.setText("continue");
        btncontinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncontinueActionPerformed(evt);
            }
        });
        getContentPane().add(btncontinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, 180, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void loadData() {
        DefaultTableModel model = (DefaultTableModel) tabeltrjk.getModel();
        model.setRowCount(0); 
        
        try (Connection conn = koneksi.koneksiDB();
             PreparedStatement stmt = conn.prepareStatement(
                 "SELECT Plat_Nomor, Jenis_Kendaraan, Warna_Kendaraan, " +
                 "Tipe_Kendaraan, Id_Barang, Id_barang_2 FROM kendaraan")) {
            
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("Plat_Nomor"),
                    rs.getString("Jenis_Kendaraan"),
                    rs.getString("Warna_Kendaraan"),
                    rs.getString("Tipe_Kendaraan"),
                    rs.getString("Id_Barang"),
                    rs.getString("Id_barang_2")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
                "Error loading data: " + e.getMessage(), 
                "Database Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }
  private boolean validateBarangId(String barangId) {
        try (Connection conn = koneksi.koneksiDB();
             PreparedStatement stmt = conn.prepareStatement(
                 "SELECT COUNT(*) FROM barang WHERE Id_Barang = ?")) {
            
            stmt.setString(1, barangId);
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
            return false;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Error validating Barang ID: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    private void clearFields() {
    platnomor.setText("");
    jenis.setText("");
    warna.setText("");
    tipe.setText("");
    idbrng.setText("");
    idbrng2.setText("");
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    halamanutama1 hal1 = new halamanutama1();
        hal1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       barang_karyawan b1  = new barang_karyawan();
        b1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
transaksijual_karyawan j1  = new transaksijual_karyawan();
        j1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int pilihan = JOptionPane.showConfirmDialog(this, 
            "Apakah anda yakin ingin logout?",
            "Konfirmasi Logout",
            JOptionPane.YES_NO_OPTION);
            
    if (pilihan == JOptionPane.YES_OPTION) {
        // Tutup frame saat ini
        this.dispose();
        
        // Buat dan tampilkan frame LOGIN1
        LOGIN1 loginFrame = new LOGIN1();
        loginFrame.setVisible(true);
    }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void tabeltrjkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabeltrjkMouseClicked
       int row = tabeltrjk.getSelectedRow();
    if (row >= 0) {
        try {
            platnomor.setText(tabeltrjk.getValueAt(row, 0).toString()); // Plat_Nomor
            jenis.setText(tabeltrjk.getValueAt(row, 1).toString()); // Jenis_Kendaraan
            warna.setText(tabeltrjk.getValueAt(row, 2).toString()); // Warna_Kendaraan
            tipe.setText(tabeltrjk.getValueAt(row, 3).toString()); // Tipe_Kendaraan
            idbrng.setText(tabeltrjk.getValueAt(row, 4).toString()); // Id_Barang
            idbrng2.setText(tabeltrjk.getValueAt(row, 5).toString()); // Id_barang_2
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error selecting data: " + e.getMessage(),
                "Selection Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }

    }//GEN-LAST:event_tabeltrjkMouseClicked

    private void btncontinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncontinueActionPerformed
 try {
        String platNomor = platnomor.getText().trim();
        String jenisKendaraan = jenis.getText().trim();
        String warnaKendaraan = warna.getText().trim();
        String tipeKendaraan = tipe.getText().trim();
        String idBarang1 = idbrng.getText().trim();
        String idBarang2 = idbrng2.getText().trim();

        // Validate fields are not empty
        if (platNomor.isEmpty() || jenisKendaraan.isEmpty() ||
            warnaKendaraan.isEmpty() || tipeKendaraan.isEmpty() ||
            idBarang1.isEmpty() || idBarang2.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "All fields must be filled!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate Barang IDs
        if (!validateBarangId(idBarang1) || !validateBarangId(idBarang2)) {
            JOptionPane.showMessageDialog(this,
                "One or both ID Barang not found in the database!",
                "Validation Error",
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Insert Data
        try (Connection conn = koneksi.koneksiDB();
            PreparedStatement stmt = conn.prepareStatement(
                "INSERT INTO kendaraan (Plat_Nomor, Jenis_Kendaraan, " +
                "Warna_Kendaraan, Tipe_Kendaraan, Id_Barang, Id_barang_2) " +
                "VALUES (?, ?, ?, ?, ?, ?)")) {

            stmt.setString(1, platNomor);
            stmt.setString(2, jenisKendaraan);
            stmt.setString(3, warnaKendaraan);
            stmt.setString(4, tipeKendaraan);
            stmt.setString(5, idBarang1);
            stmt.setString(6, idBarang2);

            int result = stmt.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this,
                    "Data successfully!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
                loadData();
                clearFields();

                eksekusitransaksijualkrywn ek = new eksekusitransaksijualkrywn();
                ek.setVisible(true);
                this.dispose();
            }
        }

    } catch (SQLException e) {
        if (e.getMessage().contains("Duplicate entry")) {
            JOptionPane.showMessageDialog(this,
                "Plate Number already registered!",
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,
                "Error saving data: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
        
    
        }
    }

    }//GEN-LAST:event_btncontinueActionPerformed

    private void idbrng2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idbrng2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idbrng2ActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int row = tabeltrjk.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih data yang akan dihapus",
                "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String platNomor = tabeltrjk.getValueAt(row, 0).toString();

        int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah anda yakin ingin menghapus data kendaraan dengan plat nomor " + platNomor + "?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = koneksi.koneksiDB();
                PreparedStatement stmt = conn.prepareStatement(
                    "DELETE FROM kendaraan WHERE Plat_Nomor = ?")) {

                stmt.setString(1, platNomor);

                int result = stmt.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(this,
                        "Data berhasil dihapus!",
                        "Sukses",
                        JOptionPane.INFORMATION_MESSAGE);
                    loadData();
                    clearFields();
                } else {
                    JOptionPane.showMessageDialog(this,
                        "Gagal menghapus data",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this,
                    "Error menghapus data: " + e.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btndeleteActionPerformed

    private void SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHActionPerformed
        String searchKeyword = SEARCH.getText().trim();
        if (!searchKeyword.isEmpty()) {
            try (Connection conn = koneksi.koneksiDB()) {
                String sql = "SELECT * FROM kendaraan " +
                "WHERE Id_Barang LIKE ? OR " +
                "Jenis_Kendaraan LIKE ? OR " +
                "Warna_Kendaraan LIKE ? OR " +
                "Tipe_Kendaraan LIKE ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, "%" + searchKeyword + "%");
                stmt.setString(2, "%" + searchKeyword + "%");
                stmt.setString(3, "%" + searchKeyword + "%");
                stmt.setString(4, "%" + searchKeyword + "%");
                ResultSet rs = stmt.executeQuery();
                DefaultTableModel model = (DefaultTableModel) tabeltrjk.getModel();
                model.setRowCount(0);
                while (rs.next()) {
                    String idBarang = rs.getString("Id_Barang");
                    String jenisKendaraan = rs.getString("Jenis_Kendaraan");
                    String warnaKendaraan = rs.getString("Warna_Kendaraan");
                    String tipeKendaraan = rs.getString("Tipe_Kendaraan");
                    model.addRow(new Object[]{idBarang, jenisKendaraan, warnaKendaraan, tipeKendaraan});
                }
                if (model.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Pencarian Kosong", JOptionPane.INFORMATION_MESSAGE);
                }
                rs.close();
                stmt.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error during search: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Masukkan keyword untuk pencarian!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_SEARCHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksijual_karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksijual_karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksijual_karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksijual_karyawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksijual_karyawan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SEARCH;
    private javax.swing.JButton btncontinue;
    private javax.swing.JButton btndelete;
    private javax.swing.JTextField idbrng;
    private javax.swing.JTextField idbrng2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jenis;
    private javax.swing.JTextField platnomor;
    private javax.swing.JScrollPane scrtjk;
    private javax.swing.JTable tabeltrjk;
    private javax.swing.JTextField tipe;
    private javax.swing.JTextField warna;
    // End of variables declaration//GEN-END:variables
}
